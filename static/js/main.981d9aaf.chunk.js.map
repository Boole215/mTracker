{"version":3,"sources":["appConfig.js","app/features/addDialogue/addDialogueSlice.js","app/features/addCard/addCardSlice.js","app/services/MangadexAPI.js","app/services/UtilityFunctions.js","assets/favicon.ico","app/features/card/cardSlice.js","app/features/addCardTooltip/addCardTooltip.js","app/features/addDialogue/addDialogue.js","app/features/chapterEntry/chapterEntry.js","app/features/card/card.js","app/features/cardGen/cardGen.js","app/features/settingsCard/settingsCardSlice.js","app/features/settingsCard/settingsCard.js","app/features/buttonSpeedDial/buttonSpeedDialSlice.js","app/features/removeCardDialogue/removeCardDialogueSlice.js","app/features/buttonSpeedDial/buttonSpeedDial.js","app/features/timekeeper/timekeeper.js","app/features/removeListItem/removeListItem.js","app/features/removeCardDialogue/removeCardDialogue.js","assets/rotundCat.jpg","app/features/tutorialCard/tutorialCard.js","app/App.js","app/store.js","serviceWorkerRegistration.js","app/features/loadingScreen/loadingScreen.js","index.js"],"names":["myConfig","apiUrl","proxyUrl","projectRoot","__dirname","addDialogueSlice","createSlice","name","initialState","dialogueField","reducers","updateField","state","action","payload","clearTextfield","actions","addCardSlice","addingFeed","openAddDialogue","closeAddDialogue","instance","this","axiosInst","axios","create","baseURL","appConfig","api","rateLimit","maxRPS","a","get","response","data","seriesId","coverId","getIdealFontSize","titleLength","calculatedValue","Math","min","max","fetchManga","createAsyncThunk","getState","console","log","Object","keys","FeedCard","cards","some","key","alreadyAdded","MangadexAPI","fetchMangaById","mangaResponse","fetchChapter","chapterResponse","fetchCover","coverResponse","results","map","x","highlight","updateChapterList","currentSeriesLatestChapter","mostRecentChapter","currentSeriesTitle","seriesTitle","updatedChapterList","retChapList","latestChapter","length","attributes","chapter","latestTitle","title","body","Notification","myIcon","chapterList","latest","feedCardSlice","remove","addingResult","cardCount","showTutorial","mouseInside","showInfo","mouseOutside","touchToggleBlur","toggleRemoval","filter","removeSeries","retObj","assign","reduce","result","ignoreKey","clearRemove","mouseOverChapter","seriesID","chapters","chapterID","mouseNoLongerOverChapter","clearAddingResult","resetCardLatestChapter","disableTutorial","extraReducers","fulfilled","coverLoc","seriesDesc","titleSize","rejected","useStyle","makeStyles","myTypography","fontFamily","fontSize","mySubTypography","AddCardTooltip","classes","Tooltip","Fragment","Typography","className","placement","enterTouchDelay","arrow","IconButton","aria-label","useStyles","font","addDia","position","left","top","padding","zIndex","exit","marginLeft","addButton","marginTop","AddDialogue","dispatch","useDispatch","showThis","useSelector","AddCard","currentValue","Dialog","open","onClose","DialogTitle","onSubmit","e","preventDefault","DialogContent","DialogContentText","TextField","onChange","target","value","valueid","variant","label","helperText","error","fullWidth","DialogActions","Button","type","myListItem","paddingLeft","marginBottom","marginRight","chapterEntry","color","ChapterEntry","chapterTitle","chapterNum","iter","chapterKeys","isHighlighted","Link","underline","href","TypographyClasses","onMouseEnter","onMouseLeave","ListItem","ListItemText","primaryTypographyProps","secondaryTypographyProps","primary","secondary","root","minWidth","height","maxWidth","maxHeight","objectFit","MuiButtonBase","disableRipple","media","minHeight","blurImg","paddingTop","paddingRight","myList","background","listHeader","id","crntTitle","imageURL","iterCount","innerClasses","dynamicTitle","innerFont","doBlur","Grid","item","xs","sm","md","lg","xl","Fade","in","timeout","enter","Card","elevation","CardActionArea","onTouchStart","gutterBottom","component","List","dense","disablePadding","subheader","ListSubheader","slice","CardMedia","image","CardGen","openSettingsButtonSlice","showSettings","shouldAutoUpdate","nextUpdateAtTime","lastUpdateTime","currentTime","toggleAutoUpdates","setLastUpdateTime","Date","now","setNextUpdateTime","setCurrentTime","toggleShowSettings","width","innerContainer","margin","textDecoration","textAlign","SettingsCard","autoUpdatesEnabled","Settings","currentSeriesIds","lastUpdateString","secondsSinceEpoch","thisDate","getMonth","toString","getDate","getFullYear","getHours","getMinutes","getSeconds","formatTime","ListItemIcon","Checkbox","checked","buttonSpeedDialSlice","shouldShowActions","toggleShowActions","removeCardDialogueSlice","shouldShow","toggleRemoveDialogue","speedDial","right","bottom","ButtonSpeedDial","toggleHandler","shouldBeOpen","actionSpeedDial","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","hidden","SpeedDialAction","tooltipTitle","onClick","window","location","Timekeeper","nextUpdateTime","autoUpdateOn","setTimeout","RemoveListItem","shouldRemove","RemoveCardDialogue","currentCards","showDialogue","RemoveDialogue","disabled","pointerEvents","backgroundImg","backgroundSize","backgroundImage","rotundCat","userSelect","TutorialCard","Paper","align","cardContainer","App","Box","m","container","spacing","justify","alignItems","combineReducers","feedCardReducer","addCardReducer","addDialogueReducer","settingsCardReducer","buttonSpeedDialReducer","removeCardDialogueReducer","persistConfig","storage","whitelist","persistedReducers","persistReducer","store","configureStore","reducer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","loading","LoadingScreen","CircularProgress","persistor","persistStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","permission","requestPermission","alert"],"mappings":"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","file":"static/js/main.981d9aaf.chunk.js","sourcesContent":["const myConfig = {\n  apiUrl: \"https://api.mangadex.org/\",\n  proxyUrl: \"https://jshoukai.com/api\",\n  projectRoot: __dirname,\n};\n\nexport default myConfig;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const addDialogueSlice = createSlice({\r\n  name: \"AddDialogue\",\r\n  initialState: {\r\n    dialogueField: \"\",\r\n  },\r\n  reducers: {\r\n    updateField: (state, action) => {\r\n      state.dialogueField = action.payload;\r\n    },\r\n    clearTextfield: (state) => {\r\n      state.dialogueField = \"\";\r\n    },\r\n    // pushes the submitted ID to be processed with API calls, and for an entry under 'cards'\r\n    // to be created for the data that will (/should) be received\r\n  },\r\n});\r\n\r\nexport const { updateField, clearTextfield } = addDialogueSlice.actions;\r\n\r\nexport default addDialogueSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const addCardSlice = createSlice({\r\n    name: \"addCard\",\r\n    initialState: {\r\n        addingFeed: false,\r\n    },\r\n    reducers: {\r\n        // self explanatory setters, used by the add button and the add dialogue's\r\n        // exit button\r\n        openAddDialogue: (state) => {\r\n            state.addingFeed = true\r\n        },\r\n        closeAddDialogue: (state) => {\r\n            state.addingFeed = false\r\n        },\r\n    },\r\n\r\n})\r\n\r\nexport const { openAddDialogue, closeAddDialogue } = addCardSlice.actions\r\n\r\nexport default addCardSlice.reducer\r\n","import axios from \"axios\";\nimport rateLimit from \"axios-rate-limit\";\nimport appConfig from \"../../appConfig\";\n// todo: move this to a config/appConfig.js\nclass MangadexAPI {\n  constructor() {\n    this.axiosInst = axios.create({\n      baseURL: appConfig.proxyUrl,\n    });\n    this.api = rateLimit(this.axiosInst, {\n      maxRPS: 5,\n    });\n  }\n\n  /**\n   * fetches all of the manga\n   * @returns {Promise<[]>}\n   */\n  async fetchAllManga() {\n    const response = await this.api.get(\"/manga/\");\n\n    //const myUrl = `${APP_CONFIG.apiUrl}/manga/`;\n    //const response = await this.api.get(`?url=${encodeURIComponent(myUrl)}`);\n    const { data } = response;\n    return data;\n  }\n\n  /**\n   * fetches a single manga by Id\n   * @param {string} seriesId\n   * @returns {Promise<Object>}\n   */\n  async fetchMangaById(seriesId) {\n    const response = await this.api.get(`/manga/${seriesId}`);\n    //const myUrl = `${APP_CONFIG.apiUrl}/manga/${seriesId}`;\n    //const response = await this.api.get(`?url=${encodeURIComponent(myUrl)}`);\n    const { data } = response;\n    return data;\n  }\n\n  /**\n   * fetches a manga's chapters using the manga's Id\n   * @param seriesId\n   * @returns {Promise<any>}\n   */\n  async fetchChapter(seriesId) {\n    const response = await this.api.get(\n      `/manga/${seriesId}/feed?translatedLanguage[]=en&order[chapter]=desc`\n    );\n    //const myUrl = `${APP_CONFIG.apiURl}/manga/${seriesId}/feed?translatedLanguage[]=en&order[chapter]=desc`;\n    //const response = await this.api.get(`?url=${encodeURIComponent(myUrl)}`);\n    return response.data;\n  }\n\n  /**\n   * fetches a cover by Id\n   * @param coverId\n   * @returns {Promise<any>}\n   */\n  async fetchCover(coverId) {\n    //const myUrl = `${APP_CONFIG.apiURl}/cover/${coverId}/`;\n    //const response = await this.api.get(`?url=${encodeURIComponent(myUrl)}`);\n    const response = await this.api.get(`/cover/${coverId}`);\n    const { data } = response;\n\n    return data;\n  }\n}\n\nconst instance = new MangadexAPI();\n\nexport default instance;\n","/***\r\n * returns an ideal font size based titleLength\r\n * @param {number} titleLength\r\n * @returns {number}\r\n */\r\nfunction getIdealFontSize(titleLength) {\r\n  /* This uses Frieren's title as the basis for a min VH,\r\n   * and uses Kaguya's title as the basis for a max VH.\r\n   * The equation is essentially: 2 - ((InputLen) - (minLen)) * C\r\n   * where C is a constant\r\n   * The constant was found by plugging in Kaguya's len (58) as InputLen, and Frieren's len (17)\r\n   * as minLen\r\n   */\r\n  const calculatedValue = 2 - (titleLength - 17) * 0.00976;\r\n\r\n  return Math.min(Math.max(calculatedValue, 1.6), 2);\r\n}\r\n\r\n/***\r\n * returns the time at secondsSinceEpoch in the format\r\n * \"Month/Date/Year H/M/S\"\r\n * @param secondsSinceEpoch\r\n * @returns {string}\r\n */\r\nfunction formatTime(secondsSinceEpoch) {\r\n  if (secondsSinceEpoch == null) {\r\n    return \"Never Updated\";\r\n  } else {\r\n    const thisDate = new Date(secondsSinceEpoch);\r\n    return `${(thisDate.getMonth() + 1).toString()}/${thisDate\r\n      .getDate()\r\n      .toString()}/${thisDate.getFullYear().toString()}\r\n    ${thisDate.getHours().toString()}:${thisDate\r\n      .getMinutes()\r\n      .toString()}:${thisDate.getSeconds().toString()}\r\n    `;\r\n  }\r\n}\r\n\r\nexport { getIdealFontSize, formatTime };\r\n","export default __webpack_public_path__ + \"static/media/favicon.4fe75d5f.ico\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport MangadexAPI from \"../../services/MangadexAPI\";\nimport { getIdealFontSize } from \"../../services/UtilityFunctions\";\nimport myIcon from \"../../../assets/favicon.ico\";\n\n/***\n * returns an object containing series/chapter/cover information\n * or, an object stating that the series has already been added\n * @param {string} seriesId\n * @type {AsyncThunk<{alreadyAdded: boolean}|Object, void, {}>}\n */\nexport const fetchManga = createAsyncThunk(\n  \"feedcard/fetchManga\",\n  async (seriesId, { getState }) => {\n    const state = getState();\n    console.log();\n\n    if (seriesId === \"\") {\n      return null;\n    }\n    if (Object.keys(state.FeedCard.cards).some((key) => key === seriesId)) {\n      return { alreadyAdded: true };\n    }\n    let mangaResponse = await MangadexAPI.fetchMangaById(seriesId);\n    const chapterResponse = await MangadexAPI.fetchChapter(seriesId);\n\n    const coverResponse = await MangadexAPI.fetchCover(\n      mangaResponse[\"relationships\"][\"2\"][\"id\"]\n    );\n\n    mangaResponse[\"data\"][\n      \"coverURL\"\n    ] = `https://uploads.mangadex.org/covers/${mangaResponse[\"data\"][\"id\"]}/${coverResponse[\"data\"][\"attributes\"][\"fileName\"]}.512.jpg`;\n    mangaResponse[\"data\"][\"chapterList\"] = chapterResponse.results;\n    mangaResponse[\"data\"][\"chapterList\"] = mangaResponse[\"data\"][\n      \"chapterList\"\n    ].map((x) => ({\n      ...x,\n      highlight: false,\n    }));\n\n    mangaResponse[\"alreadyAdded\"] = false;\n\n    // The following lines will be used for testing the update function\n    // They will remove the most recent entry, then move everything else up by one\n    //const chapOne = mangaResponse[\"data\"][\"chapterList\"][\"1\"];\n    //mangaResponse[\"data\"][\"chapterList\"][\"0\"] = chapOne;\n    //65163395-201c-4f5a-b303-706f32bf2df4\n    return mangaResponse;\n  }\n);\n\nexport const updateChapterList = createAsyncThunk(\n  \"feedcard/updateChapterList\",\n  async (seriesId, { getState }) => {\n    const state = getState();\n    const currentSeriesLatestChapter =\n      state.FeedCard.cards[seriesId].mostRecentChapter;\n\n    const currentSeriesTitle = state.FeedCard.cards[seriesId].seriesTitle;\n\n    const updatedChapterList = await MangadexAPI.fetchChapter(seriesId);\n    const retChapList = updatedChapterList.results.map((x) => ({\n      ...x,\n      highlight: false,\n    }));\n    // If the length of the list of chapters is non zero, then get the latest chapter's number\n    const latestChapter =\n      updatedChapterList.results.length !== 0\n        ? updatedChapterList.results[\"0\"].data.attributes.chapter\n        : null;\n    if (latestChapter != null) {\n      if (latestChapter !== currentSeriesLatestChapter) {\n        const latestTitle = retChapList[\"0\"].data.attributes.title;\n        console.log(\"Sending notification\");\n        const title = `New Chapter for ${currentSeriesTitle}!`;\n        const body = `Chapter ${latestChapter}, ${latestTitle}`;\n\n        // eslint-disable-next-line no-unused-vars\n        const myNotif = new Notification(title, { body, myIcon });\n        console.log(\"Notification sent\");\n      }\n    }\n    return {\n      seriesId: seriesId,\n      chapterList: retChapList,\n      latest: latestChapter,\n    };\n  }\n);\n\nexport const feedCardSlice = createSlice({\n  name: \"feedcard\",\n  initialState: {\n    cards: {},\n    remove: [],\n    addingResult: null,\n    cardCount: 0,\n    showTutorial: true,\n  },\n  reducers: {\n    // mouse actions receive the card's ID as the payload in order to determine\n    // which specific card to blur\n    mouseInside: (state, action) => {\n      state.cards[action.payload].showInfo = true;\n    },\n    mouseOutside: (state, action) => {\n      state.cards[action.payload].showInfo = false;\n    },\n\n    touchToggleBlur: (state, action) => {\n      state.cards[action.payload].showInfo =\n        !state.cards[action.payload].showInfo;\n    },\n    toggleRemoval: (state, action) => {\n      if (!state.cards[action.payload].remove) {\n        state.remove = [action.payload, ...state.remove];\n      } else {\n        state.remove = state.remove.filter((key) => key !== action.payload);\n      }\n\n      state.cards[action.payload].remove = !state.cards[action.payload].remove;\n    },\n    removeSeries: (state) => {\n      const retObj = Object.assign({}, state, {\n        cards: Object.keys(state.cards).reduce((result, key) => {\n          if (!state.remove.some((ignoreKey) => ignoreKey === key)) {\n            result[key] = state.cards[key];\n          }\n          return result;\n        }, {}),\n      });\n      state.cards = retObj.cards;\n    },\n    clearRemove: (state) => {\n      state.remove = [];\n    },\n    mouseOverChapter: (state, action) => {\n      state.cards[action.payload.seriesID].chapters[\n        action.payload.chapterID\n      ].highlight = true;\n    },\n    mouseNoLongerOverChapter: (state, action) => {\n      state.cards[action.payload.seriesID].chapters[\n        action.payload.chapterID\n      ].highlight = false;\n    },\n    clearAddingResult: (state) => {\n      state.addingResult = \"\";\n    },\n    resetCardLatestChapter: (state, action) => {\n      state.cards[action.payload].mostRecentChapter = \"0\";\n    },\n    disableTutorial: (state) => {\n      state.showTutorial = false;\n    },\n  },\n  extraReducers: {\n    /* This reducer has two checks\n     *\n     *  First, it checks if the payload is valid\n     *  It should only ever be null if the input in the textField is empty\n     *  so fetchManga would immediately return null\n     *\n     *  Secondly, it checks to see if the card has already been added.\n     *  fetchManga checks using .some() if there's a key in the\n     *  cards[] array that's matching the seriesId.\n     *\n     *  If so, fetchManga terminates early by returning an object {alreadyAdded:true}\n     *\n     *  Should everything check out, a new entry is added to the array and it is\n     *  populated with chapter/series/cover information.\n     */\n    [fetchManga.fulfilled]: (state, action) => {\n      if (action.payload != null) {\n        if (!action.payload.alreadyAdded) {\n          // Pull things from action.payload to config\n          state.cards[action.payload[\"data\"][\"id\"]] = {\n            seriesTitle: action.payload[\"data\"][\"attributes\"][\"title\"][\"en\"],\n            coverLoc: action.payload[\"data\"][\"coverURL\"],\n            seriesDesc:\n              action.payload[\"data\"][\"attributes\"][\"description\"][\"en\"],\n            chapters: action.payload[\"data\"][\"chapterList\"],\n            mostRecentChapter:\n              action.payload[\"data\"][\"chapterList\"].length !== 0\n                ? action.payload.data.chapterList[\"0\"].data.attributes.chapter\n                : null,\n            titleSize: getIdealFontSize(\n              action.payload[\"data\"][\"attributes\"][\"title\"][\"en\"].length\n            ),\n            remove: false,\n          };\n          state.cardCount += 1;\n          state.addingResult = \"Success\";\n        } else {\n          state.addingResult = \"Card is Already Present\";\n        }\n      }\n    },\n    [fetchManga.rejected]: (state, action) => {\n      state.addingResult = \"API Error\";\n      console.log(\"fetchManga failed.\");\n      //TODO log more detailed error info, use action to get said info\n    },\n    [updateChapterList.fulfilled]: (state, action) => {\n      state.cards[action.payload.seriesId].chapters =\n        action.payload.chapterList;\n      state.cards[action.payload.seriesId].mostRecentChapter =\n        action.payload.latest;\n    },\n  },\n});\n\nexport const {\n  mouseInside,\n  mouseOutside,\n  mouseOverChapter,\n  mouseNoLongerOverChapter,\n  touchToggleBlur,\n  clearAddingResult,\n  resetCardLatestChapter,\n  toggleRemoval,\n  removeSeries,\n  clearRemove,\n  disableTutorial,\n} = feedCardSlice.actions;\n\nexport default feedCardSlice.reducer;\n","import React from \"react\";\r\nimport { Tooltip, IconButton, Typography, makeStyles } from \"@material-ui/core\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nconst useStyle = makeStyles({\r\n  myTypography: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"1.5vh\",\r\n  },\r\n  mySubTypography: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"1.2vh\",\r\n  },\r\n});\r\n\r\nexport function AddCardTooltip() {\r\n  const classes = useStyle();\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <React.Fragment>\r\n          <Typography className={classes.myTypography}>\r\n            What series ID?\r\n          </Typography>\r\n          <Typography className={classes.mySubTypography}>\r\n            {\r\n              \"A Series' ID can be found in the URL of a Mangadex series page after '/title/'.\"\r\n            }\r\n            <br />\r\n            {\"For example, Ijiranaide Nagatoro's ID is: \"}\r\n            <br />\r\n            {\"d86cf65b-5f6c-437d-a0af-19a31f94ec55\"}\r\n          </Typography>\r\n        </React.Fragment>\r\n      }\r\n      placement=\"top\"\r\n      enterTouchDelay={0}\r\n      arrow\r\n    >\r\n      <IconButton aria-label=\"help-tooltip\">\r\n        <HelpIcon fontSize={\"small\"} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Redux/Reducer imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateField, clearTextfield } from \"./addDialogueSlice\";\r\nimport { closeAddDialogue } from \"../addCard/addCardSlice\";\r\nimport {\r\n  fetchManga,\r\n  clearAddingResult,\r\n  disableTutorial,\r\n} from \"../card/cardSlice\";\r\nimport { AddCardTooltip } from \"../addCardTooltip/addCardTooltip\";\r\n\r\n// material-ui imports\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  font: {\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  addDia: {\r\n    position: \"absolute\",\r\n    left: \"40vw\",\r\n    top: \"40vh\",\r\n    padding: 10,\r\n    zIndex: 4,\r\n  },\r\n  exit: {\r\n    position: \"absolute\",\r\n    marginLeft: \"80%\",\r\n    top: 0,\r\n  },\r\n  addButton: {\r\n    marginTop: \"2.5%\",\r\n  },\r\n});\r\n\r\nexport function AddDialogue() {\r\n  const dispatch = useDispatch();\r\n  const showThis = useSelector((state) => state.AddCard.addingFeed);\r\n  let currentValue = useSelector((state) => state.AddDialogue.dialogueField);\r\n  const classes = useStyles();\r\n\r\n  const showTutorial = useSelector((state) => state.FeedCard.showTutorial);\r\n\r\n  // It seems like you need to dispatch reducers in an anonymous function in order\r\n  // to prevent them from being dispatched upon component rendering\r\n  const handleFetchManga = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fetchManga(currentValue));\r\n    if (showTutorial) {\r\n      dispatch(disableTutorial());\r\n    }\r\n    dispatch(closeAddDialogue);\r\n  };\r\n  const handleUpdateField = (e) => dispatch(updateField(e.target.value));\r\n  const handleCloseAddDialogue = () => {\r\n    dispatch(closeAddDialogue());\r\n    dispatch(clearTextfield());\r\n    dispatch(clearAddingResult());\r\n  };\r\n\r\n  const addingResult = useSelector((state) => state.FeedCard.addingResult);\r\n\r\n  return (\r\n    <Dialog open={showThis} onClose={handleCloseAddDialogue}>\r\n      <DialogTitle>\r\n        Add Manga\r\n        <AddCardTooltip />\r\n      </DialogTitle>\r\n      <form onSubmit={handleFetchManga}>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please provide the ID of the series that you'd like to add\r\n          </DialogContentText>\r\n          <TextField\r\n            onChange={handleUpdateField}\r\n            valueid=\"inputID\"\r\n            variant=\"outlined\"\r\n            label=\"Series ID\"\r\n            helperText={addingResult}\r\n            error={addingResult === \"API Error\"}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            //variant=\"contained\"\r\n            type=\"submit\"\r\n            //onClick={handleFetchManga}\r\n            className={classes.font}\r\n          >\r\n            Add it!\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, makeStyles, ListItemText, ListItem } from \"@material-ui/core\";\nimport { mouseOverChapter, mouseNoLongerOverChapter } from \"../card/cardSlice\";\n\nconst useStyles = makeStyles({\n  myListItem: {\n    paddingLeft: \"1.5vw\",\n    marginTop: \"-15px\",\n    marginBottom: \"0vh\",\n    marginRight: \"-1.25vw\",\n  },\n  chapterEntry: {\n    fontFamily: \"Roboto\",\n    fontSize: \"1.1vh\",\n    color: \"White\",\n  },\n  myTypography: {\n    fontSize: \".9vh\",\n    color: \"White\",\n    fontFamily: \"Roboto\",\n    \"&:hover\": {\n      color: \"#7393B3!important\",\n    },\n  },\n  highlight: {\n    color: \"#7393B3!important\",\n  },\n});\n// Link for each chapter looks like: https://mangadex.org/chapter/CHAPTERID/1\n// Where the number on the end is the page number\n\n/* Props passed to component are:\n * chapterTitle={chapters[key].data.attributes.title}\n * chapterNum={chapters[key].data.attributes.chapter}\n * chapterID={chapters[key].data.id}\n * seriesID={id}\n * iter={iterCount++}\n */\nexport function ChapterEntry({\n  chapterTitle,\n  chapterNum,\n  chapterID,\n  seriesID,\n  iter,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  // TODO: Rename chapterID used in chapter keys to localChapterID, as that's the ID that's used\n  //       within the object, not the actual identifying ID for the chapter in the API\n  const chapterKeys = { seriesID: seriesID, chapterID: iter };\n  const isHighlighted = useSelector(\n    (state) => state.FeedCard.cards[seriesID].chapters[iter].highlight\n  );\n  const handleHoveringChapter = () => {\n    dispatch(mouseOverChapter(chapterKeys));\n  };\n  const handleStoppedHoveringChapter = () => {\n    dispatch(mouseNoLongerOverChapter(chapterKeys));\n  };\n\n  return (\n    <Link\n      underline={\"None\"}\n      href={`https://mangadex.org/chapter/${chapterID}/1`}\n      TypographyClasses={classes.myTypography}\n      onMouseEnter={handleHoveringChapter}\n      onMouseLeave={handleStoppedHoveringChapter}\n    >\n      <ListItem className={classes.myListItem}>\n        <ListItemText\n          // If isHighlighted is true, then the highlight class is added to Typography styling\n          primaryTypographyProps={{\n            className: `${classes.myTypography} ${\n              isHighlighted ? classes.highlight : \"\"\n            }`,\n          }}\n          secondaryTypographyProps={{\n            className: `${classes.myTypography} ${\n              isHighlighted ? classes.highlight : \"\"\n            }`,\n          }}\n          primary={`Chapter ${chapterNum}`}\n          secondary={chapterTitle}\n        />\n      </ListItem>\n    </Link>\n  );\n}\n","import React from \"react\";\n// Redux import\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { mouseInside, mouseOutside, touchToggleBlur } from \"./cardSlice\";\n\n// component import\nimport { ChapterEntry } from \"../chapterEntry/chapterEntry\";\n// asset import\n//import rotundCat from '../../assets/rotundCat.jpg'\n\n// material-ui imports\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {\n  Fade,\n  Grid,\n  CardMedia,\n  CardActionArea,\n  Typography,\n  List,\n  ListSubheader,\n  Card,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  // TODO: Figure out how to make then rectangular cards,\n  //       that are taller than they are wide. While\n  //       maintaining image scale (clipping is ok)\n\n  // For some reason setting a minWidth and a minHeight rather than width/heights made the cards become\n  // smaller as you added more. Like, first card is normal sized, second card is a bit smaller, third card is\n  // even smaller etc. Like a matryoshka doll.\n  root: {\n    position: \"relative\",\n    // maxWidth looks good at 345\n    //maxWidth: 345,\n    minWidth: \"10vw\",\n    height: \"40vh\",\n    maxWidth: \"50vw\",\n    maxHeight: \"53.33vh\",\n    objectFit: \"fill\",\n    MuiButtonBase: { disableRipple: true },\n  },\n  media: {\n    //height: \"40vh\",\n    //width: \"15vw\",\n    minWidth: \"15vw\",\n    minHeight: \"40vh\",\n    maxWidth: \"50vw\",\n    maxHeight: \"53.33vh\",\n    objectFit: \"cover\",\n  },\n  blurImg: {\n    filter: \"blur(3px) brightness(50%)\",\n  },\n  seriesTitle: {\n    paddingLeft: \"3.25vw\",\n    paddingTop: \"4vh\",\n    paddingRight: \"2.5vw\",\n    position: \"absolute\",\n    fontSize: \"2vh\",\n    color: \"white\",\n    fontFamily: \"Roboto\",\n    zIndex: 1,\n  },\n  myList: {\n    zIndex: 1,\n    position: \"absolute\",\n    background: \"none\",\n    paddingTop: \"13vh\",\n    paddingLeft: \"3vw\",\n  },\n  listHeader: {\n    color: \"White\",\n    fontFamily: \"Roboto\",\n    fontSize: \"1.5vh\",\n  },\n});\n\n// add props to be access stuff\nexport function FeedCard({ id }) {\n  const dispatch = useDispatch();\n  const crntTitle = useSelector(\n    (state) => state.FeedCard.cards[id].seriesTitle\n  );\n  const imageURL = useSelector((state) => state.FeedCard.cards[id].coverLoc);\n  const titleSize = useSelector((state) => state.FeedCard.cards[id].titleSize);\n\n  const handleMouseEnter = () => dispatch(mouseInside(id));\n  const handleMouseExit = () => dispatch(mouseOutside(id));\n  const handleTouchToggle = () => dispatch(touchToggleBlur(id));\n  /*const desc = useSelector(\n    (state) => state.FeedCard.cards[props.id].seriesDesc\n  );*/\n  let iterCount = 0;\n  const classes = useStyles();\n  const innerFont = makeStyles({\n    dynamicTitle: {\n      fontSize: `${titleSize}vh!important`,\n    },\n  });\n  const innerClasses = innerFont();\n\n  const doBlur = useSelector((state) =>\n    state.FeedCard.cards[id].showInfo ? classes.blurImg : null\n  );\n\n  const chapters = useSelector((state) => state.FeedCard.cards[id].chapters);\n\n  return (\n    <Grid item={true} xs={4} sm={3} md={3} lg={2} xl={2}>\n      <Fade in={true} timeout={{ enter: 600 }}>\n        <Card elevation={6} className={classes.root}>\n          <CardActionArea disableRipple>\n            <div\n              onMouseEnter={handleMouseEnter}\n              onMouseLeave={handleMouseExit}\n              onTouchStart={handleTouchToggle}\n            >\n              {doBlur ? (\n                // TODO: The Manga title and chapter list might look better if a Grid/GridItems are used rather than divs, look into this\n                <div>\n                  <Typography\n                    gutterBottom\n                    className={`${classes.seriesTitle} ${innerClasses.dynamicTitle}`}\n                    variant=\"h5\"\n                    component=\"h5\"\n                  >\n                    {crntTitle}\n                  </Typography>\n                  <List\n                    className={classes.myList}\n                    dense={true}\n                    disablePadding\n                    subheader={\n                      <ListSubheader\n                        component=\"div\"\n                        id=\"nested-list-subheader\"\n                        className={`${classes.listHeader} `}\n                      >\n                        Chapters\n                      </ListSubheader>\n                    }\n                  >\n                    {Object.keys(chapters)\n                      .slice(0, 5)\n                      .map((key) => (\n                        <ChapterEntry\n                          chapterTitle={chapters[key].data.attributes.title}\n                          chapterNum={chapters[key].data.attributes.chapter}\n                          chapterID={chapters[key].data.id}\n                          seriesID={id}\n                          iter={iterCount++}\n                        />\n                      ))}\n                  </List>\n                </div>\n              ) : null}\n              {/*<CardMedia component=\"img\" image={rotundCat} title=\"Large Cat\" className={`${classes.media} ${doBlur ? classes.blurImg : null}`}/>*/}\n              <CardMedia\n                component=\"img\"\n                image={imageURL}\n                title=\"Cover Image\"\n                className={`${classes.media} ${\n                  doBlur ? classes.blurImg : null\n                }`}\n              />\n            </div>\n          </CardActionArea>\n        </Card>\n      </Fade>\n    </Grid>\n  );\n}\n","import React from \"react\";\r\nimport { FeedCard } from \"../card/card\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function CardGen() {\r\n  const currentCards = Object.keys(\r\n    useSelector((state) => state.FeedCard.cards)\r\n  );\r\n  // This is moot since map won't generate anything if there's nothing in Cards\r\n  // const cardLen = useSelector((state) => state.FeedCard.cardCount);\r\n\r\n  return (\r\n    // If there's a nonzero amount of cards, then render them\r\n    currentCards.map((key) => <FeedCard id={key} />)\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const openSettingsButtonSlice = createSlice({\r\n  name: \"settingsCard\",\r\n  initialState: {\r\n    showSettings: false,\r\n    shouldAutoUpdate: false,\r\n    nextUpdateAtTime: null,\r\n    lastUpdateTime: null,\r\n    currentTime: null,\r\n  },\r\n  reducers: {\r\n    toggleAutoUpdates: (state) => {\r\n      state.shouldAutoUpdate = !state.shouldAutoUpdate;\r\n    },\r\n    setLastUpdateTime: (state) => {\r\n      state.lastUpdateTime = Date.now();\r\n    },\r\n    // true enables this, false disables and turns the nextUpdateAtTime to null\r\n    setNextUpdateTime: (state, action) => {\r\n      state.nextUpdateAtTime = action.payload\r\n        ? state.lastUpdateTime + 1200000\r\n        : null;\r\n    },\r\n    setCurrentTime: (state) => {\r\n      state.currentTime = Date.now();\r\n    },\r\n    toggleShowSettings: (state) => {\r\n      state.showSettings = !state.showSettings;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleAutoUpdates,\r\n  setLastUpdateTime,\r\n  setNextUpdateTime,\r\n  setCurrentTime,\r\n  toggleShowSettings,\r\n} = openSettingsButtonSlice.actions;\r\n\r\nexport default openSettingsButtonSlice.reducer;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  toggleAutoUpdates,\r\n  setNextUpdateTime,\r\n  setLastUpdateTime,\r\n  setCurrentTime,\r\n  toggleShowSettings,\r\n} from \"./settingsCardSlice\";\r\nimport { formatTime } from \"../../services/UtilityFunctions\";\r\nimport { updateChapterList } from \"../card/cardSlice\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: { zIndex: 15, position: \"fixed\", width: \"flex\", top: \"10vh\" },\r\n  innerContainer: { margin: \".3vh\" },\r\n  title: { textDecoration: \"underline\", textAlign: \"center\" },\r\n});\r\n\r\nexport function SettingsCard() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const autoUpdatesEnabled = useSelector(\r\n    (state) => state.Settings.shouldAutoUpdate\r\n  );\r\n  const lastUpdateTime = useSelector((state) => state.Settings.lastUpdateTime);\r\n\r\n  const currentSeriesIds = Object.keys(\r\n    useSelector((state) => state.FeedCard.cards)\r\n  );\r\n\r\n  const showSettings = useSelector((state) => state.Settings.showSettings);\r\n\r\n  const handleToggleAutoUpdates = () => {\r\n    if (!autoUpdatesEnabled) {\r\n      currentSeriesIds.map((key) => dispatch(updateChapterList(key)));\r\n      dispatch(setLastUpdateTime());\r\n      dispatch(setCurrentTime());\r\n      dispatch(setNextUpdateTime(true));\r\n    } else {\r\n      dispatch(setNextUpdateTime(false));\r\n    }\r\n    dispatch(toggleAutoUpdates());\r\n  };\r\n\r\n  const handleToggleShowSettings = () => dispatch(toggleShowSettings());\r\n\r\n  const lastUpdateString = formatTime(lastUpdateTime);\r\n  return (\r\n    <Dialog open={showSettings} onClose={handleToggleShowSettings}>\r\n      <DialogTitle>Settings</DialogTitle>\r\n      <DialogContentText>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={\"Enable auto-updates\"}\r\n              secondary={`Last Update: ${lastUpdateString}`}\r\n            />\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                checked={autoUpdatesEnabled}\r\n                onChange={handleToggleAutoUpdates}\r\n              />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </DialogContentText>\r\n    </Dialog>\r\n  );\r\n\r\n  /*\r\n  // TODO experiment with onClickAway listener sometime\r\n  return (\r\n    <Collapse in={showSettings}>\r\n      <Card className={classes.root} elevation={10}>\r\n        <Typography variant={\"h6\"} align=\"center\" gutterBottom={true}>\r\n          Settings\r\n        </Typography>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={\"Enable auto-updates\"}\r\n              checked={autoUpdatesEnabled}\r\n              onChange={handleToggleAutoUpdates}\r\n            />\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                checked={autoUpdatesEnabled}\r\n                onChange={handleToggleAutoUpdates}\r\n              />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n*/\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const buttonSpeedDialSlice = createSlice({\r\n  name: \"actionSpeedDial\",\r\n  initialState: {\r\n    shouldShowActions: false,\r\n  },\r\n  reducers: {\r\n    toggleShowActions: (state) => {\r\n      state.shouldShowActions = !state.shouldShowActions;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleShowActions } = buttonSpeedDialSlice.actions;\r\n\r\nexport default buttonSpeedDialSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const removeCardDialogueSlice = createSlice({\r\n  name: \"RemoveDialogue\",\r\n  initialState: {\r\n    shouldShow: false,\r\n  },\r\n  reducers: {\r\n    toggleRemoveDialogue: (state) => {\r\n      state.shouldShow = !state.shouldShow;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleRemoveDialogue } = removeCardDialogueSlice.actions;\r\n\r\nexport default removeCardDialogueSlice.reducer;\r\n","// React/Redux imports\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//Custom Component imports\r\nimport { toggleShowActions } from \"./buttonSpeedDialSlice\";\r\nimport { openAddDialogue } from \"../addCard/addCardSlice\";\r\nimport { toggleShowSettings } from \"../settingsCard/settingsCardSlice.js\";\r\nimport { updateChapterList } from \"../card/cardSlice\";\r\nimport { setLastUpdateTime } from \"../settingsCard/settingsCardSlice\";\r\nimport { toggleRemoveDialogue } from \"../removeCardDialogue/removeCardDialogueSlice\";\r\n\r\n// Material-ui imports\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles({\r\n  speedDial: {\r\n    position: \"fixed\",\r\n    right: \"1vw\",\r\n    bottom: \"4vh\",\r\n  },\r\n});\r\n\r\nexport function ButtonSpeedDial() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleHandler = () => dispatch(toggleShowActions());\r\n  const shouldBeOpen = useSelector(\r\n    (state) => state.actionSpeedDial.shouldShowActions\r\n  );\r\n\r\n  const handleShowSettings = () => {\r\n    dispatch(toggleShowSettings());\r\n  };\r\n  const handleShowAddCard = () => {\r\n    dispatch(openAddDialogue());\r\n  };\r\n\r\n  const handleUpdateChapters = () => {\r\n    dispatch(updateChapterList());\r\n    dispatch(setLastUpdateTime());\r\n  };\r\n\r\n  const handleGitClick = () =>\r\n    (window.location.href = \"https://github.com/Boole215/mTracker\");\r\n\r\n  const handleShowRemoveDialogue = () => {\r\n    dispatch(toggleRemoveDialogue());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.speedDial}>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial\"\r\n        icon={<SpeedDialIcon />}\r\n        open={shouldBeOpen}\r\n        onOpen={toggleHandler}\r\n        onClose={toggleHandler}\r\n        hidden={false}\r\n      >\r\n        <SpeedDialAction\r\n          icon={<GitHubIcon />}\r\n          tooltipTitle=\"Check Out The mTracker Repo\"\r\n          onClick={handleGitClick}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<SettingsIcon />}\r\n          tooltipTitle=\"Configure Settings\"\r\n          onClick={handleShowSettings}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<DeleteIcon />}\r\n          tooltipTitle=\"Remove Card\"\r\n          onClick={handleShowRemoveDialogue}\r\n        />\r\n        <SpeedDialAction\r\n          icon={<AddIcon />}\r\n          tooltipTitle=\"Add Card\"\r\n          onClick={handleShowAddCard}\r\n        />\r\n\r\n        <SpeedDialAction\r\n          icon={<CachedIcon />}\r\n          tooltipTitle=\"Update Chapters\"\r\n          onClick={handleUpdateChapters}\r\n        />\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateChapterList } from \"../card/cardSlice\";\r\nimport {\r\n  setLastUpdateTime,\r\n  setNextUpdateTime,\r\n  setCurrentTime,\r\n} from \"../settingsCard/settingsCardSlice\";\r\n\r\nexport function Timekeeper() {\r\n  const dispatch = useDispatch();\r\n\r\n  const nextUpdateTime = useSelector(\r\n    (state) => state.Settings.nextUpdateAtTime\r\n  );\r\n  const currentTime = useSelector((state) => state.Settings.currentTime);\r\n\r\n  const autoUpdateOn = useSelector((state) => state.Settings.shouldAutoUpdate);\r\n  const handleUpdateCurrentTime = () => dispatch(setCurrentTime());\r\n\r\n  const currentSeriesIds = Object.keys(\r\n    useSelector((state) => state.FeedCard.cards)\r\n  );\r\n\r\n  if (autoUpdateOn) {\r\n    if (currentTime > nextUpdateTime) {\r\n      currentSeriesIds.map((key) => dispatch(updateChapterList(key)));\r\n      dispatch(setLastUpdateTime());\r\n      dispatch(setNextUpdateTime(true));\r\n    }\r\n    // Theoretically, by updating currentTime, the selector for currentTime will trigger this\r\n    // component to re-render and thereby executing this again?\r\n    setTimeout(handleUpdateCurrentTime, 60000);\r\n  }\r\n\r\n  /*\r\n  useEffect(() => {\r\n    if (autoUpdateOn && nextUpdateTime != null) {\r\n      console.log(`Next Update Time: ${nextUpdateTime}`);\r\n      console.log(`Current time: ${Date.now()}`);\r\n      if (nextUpdateTime < Date.now()) {\r\n        currentSeriesIds.forEach((key) => {\r\n          dispatch(updateChapterList(key));\r\n        });\r\n        dispatch(setLastUpdateTime());\r\n      }\r\n    }\r\n  });\r\n*/\r\n  return <div id=\"Timekeeper dummy\"></div>;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nimport { toggleRemoval } from \"../card/cardSlice\";\r\n\r\nexport function RemoveListItem({ seriesId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const seriesTitle = useSelector(\r\n    (state) => state.FeedCard.cards[seriesId].seriesTitle\r\n  );\r\n  const shouldRemove = useSelector(\r\n    (state) => state.FeedCard.cards[seriesId].remove\r\n  );\r\n\r\n  const handleToggleRemoval = () => dispatch(toggleRemoval(seriesId));\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemText primary={seriesTitle} />\r\n      <ListItemIcon>\r\n        <Checkbox checked={shouldRemove} onChange={handleToggleRemoval} />\r\n      </ListItemIcon>\r\n    </ListItem>\r\n  );\r\n}\r\n","// React / Redux imports\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Material-ui imports\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Fade,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { RemoveListItem } from \"../removeListItem/removeListItem\";\r\nimport { removeSeries } from \"../card/cardSlice\";\r\nimport { toggleRemoveDialogue } from \"./removeCardDialogueSlice\";\r\nimport { clearRemove } from \"../card/cardSlice\";\r\n\r\nexport function RemoveCardDialogue() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemoveCards = () => dispatch(removeSeries());\r\n\r\n  const currentCards = Object.keys(\r\n    useSelector((state) => state.FeedCard.cards)\r\n  );\r\n  const remove = useSelector((state) => state.FeedCard.remove);\r\n\r\n  const showDialogue = useSelector((state) => state.RemoveDialogue.shouldShow);\r\n\r\n  const handleToggleDialogue = () => {\r\n    if (showDialogue) {\r\n      dispatch(clearRemove());\r\n    }\r\n    dispatch(toggleRemoveDialogue());\r\n  };\r\n  return (\r\n    <Dialog open={showDialogue} onClose={handleToggleDialogue}>\r\n      <DialogTitle>Remove Card</DialogTitle>\r\n      <DialogContentText>\r\n        <List>\r\n          {currentCards.map((key) => (\r\n            <RemoveListItem seriesId={key} />\r\n          ))}\r\n          {currentCards.length === 0 && (\r\n            <ListItem>\r\n              <Fade in={true}>\r\n                <Typography> Nothing to remove...</Typography>\r\n              </Fade>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </DialogContentText>\r\n      <DialogActions>\r\n        <Button disabled={remove.length === 0} onClick={handleRemoveCards}>\r\n          Remove\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rotundCat.48eba167.jpg\";","import React from \"react\";\r\n\r\n// assets\r\nimport rotundCat from \"../../../assets/rotundCat.jpg\";\r\n// material-ui imports\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { Fade, Grid, Typography, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  // TODO: Figure out how to make then rectangular cards,\r\n  //       that are taller than they are wide. While\r\n  //       maintaining image scale (clipping is ok)\r\n\r\n  // For some reason setting a minWidth and a minHeight rather than width/heights made the cards become\r\n  // smaller as you added more. Like, first card is normal sized, second card is a bit smaller, third card is\r\n  // even smaller etc. Like a matryoshka doll.\r\n  root: {\r\n    position: \"relative\",\r\n    // maxWidth looks good at 345\r\n    //maxWidth: 345,\r\n    minWidth: \"10vw\",\r\n    height: \"40vh\",\r\n    maxWidth: \"50vw\",\r\n    maxHeight: \"53.33vh\",\r\n\r\n    MuiButtonBase: { disableRipple: true },\r\n    \"&:hover\": {\r\n      pointerEvents: \"none\",\r\n    },\r\n  },\r\n  media: {\r\n    //height: \"40vh\",\r\n    //width: \"15vw\",\r\n    minWidth: \"15vw\",\r\n    minHeight: \"40vh\",\r\n    maxWidth: \"50vw\",\r\n    maxHeight: \"53.33vh\",\r\n    objectFit: \"cover\",\r\n  },\r\n  backgroundImg: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundSize: \"cover\",\r\n    backgroundImage: `url(${rotundCat})`,\r\n    filter: \"blur(2px) brightness(80%)\",\r\n    zIndex: 0,\r\n  },\r\n\r\n  seriesTitle: {\r\n    marginLeft: \"2vw\",\r\n    paddingTop: \"4vh\",\r\n    paddingRight: \"2.5vw\",\r\n    position: \"relative\",\r\n    fontSize: \"2vh\",\r\n    color: \"white\",\r\n    fontFamily: \"Roboto\",\r\n    zIndex: 1,\r\n  },\r\n  seriesDesc: {\r\n    width: \"auto\",\r\n    marginLeft: \"1vw\",\r\n    marginRight: \"1vw\",\r\n    //marginLeft: \"5.25vw\",\r\n    paddingTop: \"4vh\",\r\n    //marginRight: \"8.5vw\",\r\n    position: \"relative\",\r\n    fontSize: \"1.5vh\",\r\n    color: \"white\",\r\n    fontFamily: \"Roboto\",\r\n    zIndex: 2,\r\n    userSelect: \"text\",\r\n  },\r\n  myList: {\r\n    zIndex: 2,\r\n    position: \"absolute\",\r\n    background: \"none\",\r\n    paddingTop: \"13vh\",\r\n    paddingLeft: \"3vw\",\r\n  },\r\n  listHeader: {\r\n    color: \"White\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"1.5vh\",\r\n  },\r\n});\r\n\r\n// add props to be access stuff\r\nexport function TutorialCard() {\r\n  const titleSize = \"1.2vh\";\r\n\r\n  const classes = useStyles();\r\n  const innerFont = makeStyles({\r\n    dynamicTitle: {\r\n      fontSize: `${titleSize}vh!important`,\r\n    },\r\n  });\r\n  const innerClasses = innerFont();\r\n\r\n  return (\r\n    <Grid item={true} xs={4} sm={3} md={3} lg={2} xl={2}>\r\n      <Fade in={true} timeout={{ enter: 600 }}>\r\n        <Paper elevation={6} className={classes.root}>\r\n          <div className={classes.backgroundImg}></div>\r\n          <Typography\r\n            className={`${classes.seriesTitle} ${innerClasses.dynamicTitle}`}\r\n            variant=\"h5\"\r\n            component=\"h5\"\r\n            align=\"center\"\r\n          >\r\n            Get Started\r\n          </Typography>\r\n          <Typography align=\"center\" className={classes.seriesDesc}>\r\n            Use the button on the bottom right to use the app. Series ID's can\r\n            be found in Mangadex manga entry URL's.\r\n            <br />\r\n            Here's a series ID to start you off: <br />\r\n            f8e294c0-7c11-4c66-bdd7-4e25df52bf69\r\n          </Typography>\r\n        </Paper>\r\n      </Fade>\r\n    </Grid>\r\n  );\r\n}\r\n","import \"../index.css\";\r\n\r\n// Core dependencies\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Custom Components\r\nimport { AddDialogue } from \"./features/addDialogue/addDialogue\";\r\nimport { CardGen } from \"./features/cardGen/cardGen\";\r\nimport { SettingsCard } from \"./features/settingsCard/settingsCard\";\r\nimport { ButtonSpeedDial } from \"./features/buttonSpeedDial/buttonSpeedDial\";\r\nimport { Timekeeper } from \"./features/timekeeper/timekeeper\";\r\nimport { RemoveCardDialogue } from \"./features/removeCardDialogue/removeCardDialogue\";\r\nimport { TutorialCard } from \"./features/tutorialCard/tutorialCard\";\r\n\r\n// Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    zIndex: 0,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const showTutorial = useSelector((state) => state.FeedCard.showTutorial);\r\n\r\n  return (\r\n    <div>\r\n      <Timekeeper />\r\n      <SettingsCard />\r\n      <RemoveCardDialogue />\r\n      <AddDialogue />\r\n      <Box m={\"15\"} height=\"100%\" className={classes.cardContainer}>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          {showTutorial && <TutorialCard />}\r\n          <CardGen />\r\n        </Grid>\r\n        <ButtonSpeedDial />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport feedCardReducer from \"./features/card/cardSlice\";\r\nimport addCardReducer from \"./features/addCard/addCardSlice\";\r\nimport addDialogueReducer from \"./features/addDialogue/addDialogueSlice\";\r\nimport settingsCardReducer from \"./features/settingsCard/settingsCardSlice\";\r\nimport buttonSpeedDialReducer from \"./features/buttonSpeedDial/buttonSpeedDialSlice\";\r\nimport removeCardDialogueReducer from \"./features/removeCardDialogue/removeCardDialogueSlice\";\r\n\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst reducers = combineReducers({\r\n  FeedCard: feedCardReducer,\r\n  AddCard: addCardReducer,\r\n  AddDialogue: addDialogueReducer,\r\n  Settings: settingsCardReducer,\r\n  actionSpeedDial: buttonSpeedDialReducer,\r\n  RemoveDialogue: removeCardDialogueReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"FeedCard\", \"Settings\"],\r\n};\r\n\r\nconst persistedReducers = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducers,\r\n});\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (\n    /*process.env.NODE_ENV === 'production' &&*/ \"serviceWorker\" in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  loading: {\n    position: \"absolute\",\n    left: \"45vw\",\n    top: \"45vh\",\n    padding: 10,\n    zIndex: 4,\n  },\n});\n\nexport function LoadingScreen() {\n  const classes = useStyles();\n  return <CircularProgress className={classes.loading} />;\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport store from \"./app/store\";\r\n\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nimport { LoadingScreen } from \"./app/features/loadingScreen/loadingScreen\";\r\n\r\nlet persistor = persistStore(store);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={<LoadingScreen />} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n\r\nif (!(\"Notification\" in window)) {\r\n  alert(\"This Browser does not support desktop notifications\");\r\n} else if (Notification.permission === \"granted\") {\r\n  // do nothing\r\n} else {\r\n  Notification.requestPermission().then((permission) => {\r\n    console.log(\"Given the following permission\", permission);\r\n    if (permission !== \"granted\") {\r\n      alert(\r\n        \"Enable notifications if you'd like to be notified when a new chapter comes out!\"\r\n      );\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}